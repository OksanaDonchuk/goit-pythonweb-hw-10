"""Add user and token

Revision ID: 439a5f7a7af6
Revises: 65fb3b80f5a2
Create Date: 2025-09-18 19:47:30.957894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '439a5f7a7af6'
down_revision: Union[str, Sequence[str], None] = '65fb3b80f5a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('hash_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('refresh_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token_hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expired_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token_hash')
    )
    op.add_column('contacts', sa.Column('user_id', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('contacts_email_key'), 'contacts', type_='unique')
    op.drop_constraint(op.f('contacts_phone_key'), 'contacts', type_='unique')
    op.create_unique_constraint('unique_contact_user_email', 'contacts', ['email', 'user_id'])
    op.create_unique_constraint('unique_contact_user_phone', 'contacts', ['phone', 'user_id'])
    op.create_foreign_key(None, 'contacts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'contacts', type_='foreignkey')
    op.drop_constraint('unique_contact_user_phone', 'contacts', type_='unique')
    op.drop_constraint('unique_contact_user_email', 'contacts', type_='unique')
    op.create_unique_constraint(op.f('contacts_phone_key'), 'contacts', ['phone'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('contacts_email_key'), 'contacts', ['email'], postgresql_nulls_not_distinct=False)
    op.drop_column('contacts', 'user_id')
    op.drop_table('refresh_tokens')
    op.drop_table('users')
    # ### end Alembic commands ###
